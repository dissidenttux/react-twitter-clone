{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bambi\\\\Documents\\\\Quang Do\\\\Tech Talent South\\\\Advance Code Immerse\\\\class\\\\learnReact\\\\quack-project\\\\src\\\\components\\\\pages\\\\User.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport '../../css/User.css'; //User Class Use to store props for User.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.IdContent = /*#__PURE__*/React.createRef();\n    this.state = {\n      id: \"Unknown User\",\n      editMode: false,\n      LoggingStatus: false\n    };\n  } //Edit User when already log in.\n\n\n  handleEdit() {\n    this.setState({\n      editMode: true\n    });\n  } //Enter new value for User when log in.\n\n\n  handleSave() {\n    this.setState({\n      id: this.IdContent.current.value,\n      editMode: false,\n      LoggingStatus: true\n    });\n  }\n\n  handleLogout() {\n    this.setState({\n      id: \"Unknown User\",\n      editMode: false,\n      LoggingStatus: false\n    });\n  } //Render login area for User to enter their id.\n\n\n  render() {\n    let welcomeElement, idElement, buttonArea;\n\n    if (this.state.editMode && this.state.LoggingStatus) {\n      //User Log in and enable edit mode\n      welcomeElement = /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hello \", this.state.id, \" !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this);\n      buttonArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.handleSave.bind(this),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.handleLogout.bind(this),\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }, this);\n    } else if (!this.state.editMode && this.state.LoggingStatus) {\n      //User log in and not enable edit mode\n      welcomeElement = /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hello \", this.state.id, \" !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 30\n      }, this);\n      buttonArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.handleEdit.bind(this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.handleLogout.bind(this),\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this);\n    } else {\n      //User Logged out or have not log in and have not enable edit mode.\n      welcomeElement = /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hello \", this.state.id, \" !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 30\n      }, this);\n      idElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: this.IdContent,\n        className: \"title-textarea\",\n        defaultValue: this.state.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this);\n      buttonArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.handleSave.bind(this),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-view\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [welcomeElement, idElement, buttonArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nUser.propTypes = {\n  id: PropTypes.string // To make sure id is a string.\n\n};\nexport default User;","map":{"version":3,"names":["React","Component","PropTypes","User","constructor","props","IdContent","createRef","state","id","editMode","LoggingStatus","handleEdit","setState","handleSave","current","value","handleLogout","render","welcomeElement","idElement","buttonArea","bind","propTypes","string"],"sources":["C:/Users/bambi/Documents/Quang Do/Tech Talent South/Advance Code Immerse/class/learnReact/quack-project/src/components/pages/User.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/User.css';\r\n\r\n//User Class Use to store props for User.\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.IdContent = React.createRef();\r\n        this.state = {\r\n            id: \"Unknown User\",\r\n            editMode: false,\r\n            LoggingStatus: false\r\n        }\r\n    }\r\n\r\n    //Edit User when already log in.\r\n    handleEdit() {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    //Enter new value for User when log in.\r\n    handleSave() {\r\n        this.setState({\r\n            id: this.IdContent.current.value,\r\n            editMode: false,\r\n            LoggingStatus: true\r\n        });\r\n    }\r\n\r\n    handleLogout() {\r\n        this.setState({\r\n            id: \"Unknown User\",\r\n            editMode: false,\r\n            LoggingStatus: false\r\n        });\r\n    }\r\n\r\n    //Render login area for User to enter their id.\r\n    render() {\r\n        let welcomeElement,idElement, buttonArea;\r\n        if (this.state.editMode && this.state.LoggingStatus) {\r\n            //User Log in and enable edit mode\r\n            welcomeElement = <h2>Hello {this.state.id} !</h2>\r\n            buttonArea = <div>\r\n                <button className=\"btn btn-info\" onClick={this.handleSave.bind(this)}>Save</button>\r\n                <button className=\"btn btn-info\" onClick={this.handleLogout.bind(this)}>Log Out</button></div>;\r\n        } else if (!this.state.editMode &&this.state.LoggingStatus) { \r\n            //User log in and not enable edit mode\r\n            welcomeElement = <h2>Hello {this.state.id} !</h2>\r\n            buttonArea = <div>\r\n                <button className=\"btn btn-info\" onClick={this.handleEdit.bind(this)}>Edit</button>\r\n                <button className=\"btn btn-info\" onClick={this.handleLogout.bind(this)}>Log Out</button></div>;\r\n        } else {\r\n            //User Logged out or have not log in and have not enable edit mode.\r\n            welcomeElement = <h2>Hello {this.state.id} !</h2>\r\n            idElement = <textarea ref={this.IdContent} className=\"title-textarea\" defaultValue={this.state.id}></textarea>;\r\n            buttonArea = <div><button className=\"btn btn-info\" onClick={this.handleSave.bind(this)}>Login</button></div>;\r\n        }\r\n        return (\r\n            <div className=\"col-sm-6\">\r\n                <div className=\"card card-view\">\r\n                    <div className=\"card-body\">\r\n                        {welcomeElement}\r\n                        {idElement}\r\n                        {buttonArea}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    id: PropTypes.string // To make sure id is a string.\r\n}\r\n\r\nexport default User;"],"mappings":"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"},"metadata":{},"sourceType":"module"}